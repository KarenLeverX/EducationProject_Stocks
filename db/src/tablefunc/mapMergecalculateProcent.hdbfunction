FUNCTION "mapMergecalculateProcent"( in dailly_range integer, in procentile DEC(5,3) )
       RETURNS TABLE (
       	"Date" Date,
       	"StockName" NVARCHAR(10),
		"Close" DEC(25,3),
		"Partition" INTEGER,
		"LagClose" DEC(25,3),
		"Procentile"  DEC(25,3)
       )
       LANGUAGE SQLSCRIPT 
       SQL SECURITY INVOKER 
       AS 
BEGIN 
    /*****************************
        Write your function logic
    ****************************/
    
    --CALL "splitMapMergeStocks"(:dailly_range, :lc_history);
    lt_counter = SELECT DISTINCT "StockName", TO_INT(ROUND(COUNT("Date") / :dailly_range,0)) as "Counter"
					FROM "HistoryData" GROUP BY "StockName";
						
	gt_tab = MAP_MERGE(:lt_counter, "binningFunction"(:lt_counter."StockName", :lt_counter."Counter"));
	
    RETURN
		 SELECT			"Date",
						"StockName",
						"Close",
						"Partition",
						LAG("Close", 1, "Close") OVER (PARTITION BY "StockName", "Partition" ORDER BY "Date" ASC) as "LagClose",
						PERCENTILE_DISC(:procentile) WITHIN GROUP (ORDER BY "Close") OVER (PARTITION BY "StockName", "Partition") AS "Procentile"
				FROM   :gt_tab ORDER BY "Date", "StockName", "Partition";

END;