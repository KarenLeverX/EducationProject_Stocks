PROCEDURE "splitStocks"(IN IP_DAILY INTEGER,  OUT gt_tab "returnSplitStocks" )
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   DECLARE lv_counter BIGINT;
   DECLARE CURSOR lc_allStocks  FOR 
					SELECT DISTINCT "StockName", TO_INT(ROUND(COUNT("Date") / :IP_DAILY,0)) as "Counter"
					FROM "HistoryData" GROUP BY "StockName";
						
   lt_allData = SELECT * FROM "HistoryData";
   
   FOR cur_row AS lc_allStocks DO
   --lv_counter := TO_BIGINT(cur_row."Counter");
   lc_results = SELECT "Date", "StockName", ROUND("Close", 3) AS "Close", "BinNum" FROM
				(SELECT *, 
					BINNING(VALUE => "RowPartition", BIN_COUNT => TO_INT(cur_row."Counter")) OVER (ORDER BY "Date" ASC) AS "BinNum" FROM 
					(SELECT  "Date", "StockName", "Close" ,  
					                ROW_NUMBER() OVER (ORDER BY "Date" ASC) AS "RowPartition" 
					                FROM :lt_allData WHERE "StockName" = cur_row."StockName"));
                
    IF NOT IS_EMPTY(:lc_results) THEN 
    
    gt_tab = SELECT * FROM ( SELECT * FROM :gt_tab UNION ALL SELECT * FROM :lc_results);
    END IF;
   END FOR;
   
END;